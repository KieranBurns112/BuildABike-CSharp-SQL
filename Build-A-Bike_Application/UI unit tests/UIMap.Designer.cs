// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace UI_unit_tests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// a run making both the cheapest bike and an average to expensive bike on the program, one with and one without extended warranty.
        /// </summary>
        public void BasicTwoBikeTest()
        {
            #region Variable Declarations
            WpfWindow uIWpfWindow = this.UIWpfWindow;
            WpfListItem uISmallListItem = this.UIBuildABikeWindow.UISmallListItem;
            WpfListItem uIRedListItem = this.UIBuildABikeWindow.UIRedListItem;
            WpfListItem uICentaurListItem = this.UIBuildABikeWindow.UICentaurListItem;
            WpfListItem uICaliperListItem = this.UIBuildABikeWindow.UICaliperListItem;
            WpfComboBox uIWheelsBoxComboBox = this.UIBuildABikeWindow.UIWheelsBoxComboBox;
            WpfListItem uIFlatListItem = this.UIBuildABikeWindow.UIFlatListItem;
            WpfComboBox uISaddleBoxComboBox = this.UIBuildABikeWindow.UISaddleBoxComboBox;
            WpfListItem uILargeListItem = this.UIBuildABikeWindow.UILargeListItem;
            WpfListItem uIPinkListItem = this.UIBuildABikeWindow.UIPinkListItem;
            WpfListItem uISRAMListItem = this.UIBuildABikeWindow.UISRAMListItem;
            WpfComboBox uIGroupSetBrakesBoxComboBox = this.UIBuildABikeWindow.UIGroupSetBrakesBoxComboBox;
            WpfListItem uIRoadListItem = this.UIBuildABikeWindow.UIRoadListItem;
            WpfListItem uIDropListItem = this.UIBuildABikeWindow.UIDropListItem;
            WpfEdit uINameBoxEdit = this.UIBuildABikeWindow.UINameBoxEdit;
            WpfEdit uIAddressBoxEdit = this.UIBuildABikeWindow.UIAddressBoxEdit;
            WpfEdit uIEmailBoxEdit = this.UIBuildABikeWindow.UIEmailBoxEdit;
            WpfEdit uICardNoBoxEdit = this.UIBuildABikeWindow.UICardNoBoxEdit;
            WpfEdit uICardNameBoxEdit = this.UIBuildABikeWindow.UICardNameBoxEdit;
            WpfEdit uICvcBoxEdit = this.UIBuildABikeWindow.UICvcBoxEdit;
            WinButton uIYesButton = this.UIBankPromptWindow.UIYesWindow.UIYesButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(95, 70));

            // Click 'Small' list item
            Mouse.Click(uISmallListItem, new Point(61, 8));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(86, 102));

            // Click 'Red' list item
            Mouse.Click(uIRedListItem, new Point(60, 13));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(84, 153));

            // Click 'Centaur' list item
            Mouse.Click(uICentaurListItem, new Point(58, 13));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(83, 193));

            // Click 'Caliper' list item
            Mouse.Click(uICaliperListItem, new Point(49, 8));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(73, 230));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(73, 228));

            // Select 'All Purpose' in 'wheelsBox' combo box
            uIWheelsBoxComboBox.SelectedItem = this.BasicTwoBikeTestParams.UIWheelsBoxComboBoxSelectedItem;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(58, 271));

            // Click 'Flat' list item
            Mouse.Click(uIFlatListItem, new Point(30, 7));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(56, 309));

            // Select 'Basic' in 'saddleBox' combo box
            uISaddleBoxComboBox.SelectedItem = this.BasicTwoBikeTestParams.UISaddleBoxComboBoxSelectedItem;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(123, 340));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(101, 373));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(50, 62));

            // Click 'Large' list item
            Mouse.Click(uILargeListItem, new Point(34, 15));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(55, 104));

            // Click 'Pink' list item
            Mouse.Click(uIPinkListItem, new Point(33, 8));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(58, 151));

            // Click 'SRAM' list item
            Mouse.Click(uISRAMListItem, new Point(34, 10));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(55, 195));

            // Select 'Hydraulic Disk' in 'groupSetBrakesBox' combo box
            uIGroupSetBrakesBoxComboBox.SelectedItem = this.BasicTwoBikeTestParams.UIGroupSetBrakesBoxComboBoxSelectedItem;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(68, 232));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(67, 227));

            // Click 'Road' list item
            Mouse.Click(uIRoadListItem, new Point(33, 6));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(57, 269));

            // Click 'Drop' list item
            Mouse.Click(uIDropListItem, new Point(36, 10));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(60, 314));

            // Select 'Racing' in 'saddleBox' combo box
            uISaddleBoxComboBox.SelectedItem = this.BasicTwoBikeTestParams.UISaddleBoxComboBoxSelectedItem1;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(263, 412));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(83, 64));

            // Type 'test name' in 'nameBox' text box
            uINameBoxEdit.Text = this.BasicTwoBikeTestParams.UINameBoxEditText;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(110, 117));

            // Type '123 test road' in 'addressBox' text box
            uIAddressBoxEdit.Text = this.BasicTwoBikeTestParams.UIAddressBoxEditText;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(91, 170));

            // Type 'test@test.test' in 'emailBox' text box
            uIEmailBoxEdit.Text = this.BasicTwoBikeTestParams.UIEmailBoxEditText;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(64, 312));

            // Type '123' in 'cardNoBox' text box
            uICardNoBoxEdit.Text = this.BasicTwoBikeTestParams.UICardNoBoxEditText;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(55, 362));

            // Type 'test nam' in 'cardNameBox' text box
            uICardNameBoxEdit.Text = this.BasicTwoBikeTestParams.UICardNameBoxEditText;

            // The control is not available or not valid.

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(46, 395));

            // Type '123' in 'cvcBox' text box
            uICvcBoxEdit.Text = this.BasicTwoBikeTestParams.UICvcBoxEditText;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(107, 463));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(29, 7));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(24, 14));
        }
        
        #region Properties
        public virtual BasicTwoBikeTestParams BasicTwoBikeTestParams
        {
            get
            {
                if ((this.mBasicTwoBikeTestParams == null))
                {
                    this.mBasicTwoBikeTestParams = new BasicTwoBikeTestParams();
                }
                return this.mBasicTwoBikeTestParams;
            }
        }
        
        public UIBuildABike_ProgramRuWindow UIBuildABike_ProgramRuWindow
        {
            get
            {
                if ((this.mUIBuildABike_ProgramRuWindow == null))
                {
                    this.mUIBuildABike_ProgramRuWindow = new UIBuildABike_ProgramRuWindow();
                }
                return this.mUIBuildABike_ProgramRuWindow;
            }
        }
        
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        
        public UIBuildABikeWindow UIBuildABikeWindow
        {
            get
            {
                if ((this.mUIBuildABikeWindow == null))
                {
                    this.mUIBuildABikeWindow = new UIBuildABikeWindow();
                }
                return this.mUIBuildABikeWindow;
            }
        }
        
        public UIBankPromptWindow UIBankPromptWindow
        {
            get
            {
                if ((this.mUIBankPromptWindow == null))
                {
                    this.mUIBankPromptWindow = new UIBankPromptWindow();
                }
                return this.mUIBankPromptWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private BasicTwoBikeTestParams mBasicTwoBikeTestParams;
        
        private UIBuildABike_ProgramRuWindow mUIBuildABike_ProgramRuWindow;
        
        private UIWpfWindow mUIWpfWindow;
        
        private UIBuildABikeWindow mUIBuildABikeWindow;
        
        private UIBankPromptWindow mUIBankPromptWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'BasicTwoBikeTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BasicTwoBikeTestParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'All Purpose' in 'wheelsBox' combo box
        /// </summary>
        public string UIWheelsBoxComboBoxSelectedItem = "All Purpose";
        
        /// <summary>
        /// Select 'Basic' in 'saddleBox' combo box
        /// </summary>
        public string UISaddleBoxComboBoxSelectedItem = "Basic";
        
        /// <summary>
        /// Select 'Hydraulic Disk' in 'groupSetBrakesBox' combo box
        /// </summary>
        public string UIGroupSetBrakesBoxComboBoxSelectedItem = "Hydraulic Disk";
        
        /// <summary>
        /// Select 'Racing' in 'saddleBox' combo box
        /// </summary>
        public string UISaddleBoxComboBoxSelectedItem1 = "Racing";
        
        /// <summary>
        /// Type 'test name' in 'nameBox' text box
        /// </summary>
        public string UINameBoxEditText = "test name";
        
        /// <summary>
        /// Type '123 test road' in 'addressBox' text box
        /// </summary>
        public string UIAddressBoxEditText = "123 test road";
        
        /// <summary>
        /// Type 'test@test.test' in 'emailBox' text box
        /// </summary>
        public string UIEmailBoxEditText = "test@test.test";
        
        /// <summary>
        /// Type '123' in 'cardNoBox' text box
        /// </summary>
        public string UICardNoBoxEditText = "123";
        
        /// <summary>
        /// Type 'test nam' in 'cardNameBox' text box
        /// </summary>
        public string UICardNameBoxEditText = "test nam";
        
        /// <summary>
        /// Type '123' in 'cvcBox' text box
        /// </summary>
        public string UICvcBoxEditText = "123";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBuildABike_ProgramRuWindow : WpfWindow
    {
        
        public UIBuildABike_ProgramRuWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Build-A-Bike_Program (Running) - Microsoft Visual Studio";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Build-A-Bike_Program (Running) - Microsoft Visual Studio");
            #endregion
        }
        
        #region Properties
        public UITabGroupST000504ff91TabList UITabGroupST000504ff91TabList
        {
            get
            {
                if ((this.mUITabGroupST000504ff91TabList == null))
                {
                    this.mUITabGroupST000504ff91TabList = new UITabGroupST000504ff91TabList(this);
                }
                return this.mUITabGroupST000504ff91TabList;
            }
        }
        #endregion
        
        #region Fields
        private UITabGroupST000504ff91TabList mUITabGroupST000504ff91TabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITabGroupST000504ff91TabList : WpfTabList
    {
        
        public UITabGroupST000504ff91TabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = @"TabGroup|ST:0:0:{0504ff91-9d61-11d0-a794-00a0c9110051}|ST:0:0:{be4d7042-ba3f-11d2-840e-00c04f9902c1}|ST:0:0:{605322a2-17ae-43f4-b60f-766556e46c87}|ST:0:0:{28836128-fc2c-11d2-a433-00c04f72d18a}|ST:0:0:{ecb7191a-597b-41f5-9843-03a4cf275dde}|ST:0:0:{34e76e81-ee4a-11d0-ae2e-00a0c90fffc3}|ST:0:0:{d78612c7-9962-4b83-95d9-268046dad23a}";
            this.WindowTitles.Add("Build-A-Bike_Program (Running) - Microsoft Visual Studio");
            #endregion
        }
        
        #region Properties
        public UIErrorListPane UIErrorListPane
        {
            get
            {
                if ((this.mUIErrorListPane == null))
                {
                    this.mUIErrorListPane = new UIErrorListPane(this);
                }
                return this.mUIErrorListPane;
            }
        }
        #endregion
        
        #region Fields
        private UIErrorListPane mUIErrorListPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIErrorListPane : WpfPane
    {
        
        public UIErrorListPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.GenericPane";
            this.SearchProperties[WpfPane.PropertyNames.Name] = "Error List...";
            this.WindowTitles.Add("Build-A-Bike_Program (Running) - Microsoft Visual Studio");
            #endregion
        }
        
        #region Properties
        public WpfList UITrackingListViewList
        {
            get
            {
                if ((this.mUITrackingListViewList == null))
                {
                    this.mUITrackingListViewList = new WpfList(this);
                    #region Search Criteria
                    this.mUITrackingListViewList.SearchProperties[WpfList.PropertyNames.AutomationId] = "Tracking List View";
                    this.mUITrackingListViewList.WindowTitles.Add("Build-A-Bike_Program (Running) - Microsoft Visual Studio");
                    #endregion
                }
                return this.mUITrackingListViewList;
            }
        }
        #endregion
        
        #region Fields
        private WpfList mUITrackingListViewList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBuildABikeWindow : WpfWindow
    {
        
        public UIBuildABikeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Build-A-Bike";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Build-A-Bike");
            #endregion
        }
        
        #region Properties
        public WpfListItem UISmallListItem
        {
            get
            {
                if ((this.mUISmallListItem == null))
                {
                    this.mUISmallListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUISmallListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Small";
                    this.mUISmallListItem.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUISmallListItem;
            }
        }
        
        public WpfListItem UIRedListItem
        {
            get
            {
                if ((this.mUIRedListItem == null))
                {
                    this.mUIRedListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIRedListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Red";
                    this.mUIRedListItem.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUIRedListItem;
            }
        }
        
        public WpfListItem UICentaurListItem
        {
            get
            {
                if ((this.mUICentaurListItem == null))
                {
                    this.mUICentaurListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUICentaurListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Centaur";
                    this.mUICentaurListItem.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUICentaurListItem;
            }
        }
        
        public WpfListItem UICaliperListItem
        {
            get
            {
                if ((this.mUICaliperListItem == null))
                {
                    this.mUICaliperListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUICaliperListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Caliper ";
                    this.mUICaliperListItem.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUICaliperListItem;
            }
        }
        
        public WpfComboBox UIWheelsBoxComboBox
        {
            get
            {
                if ((this.mUIWheelsBoxComboBox == null))
                {
                    this.mUIWheelsBoxComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIWheelsBoxComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "wheelsBox";
                    this.mUIWheelsBoxComboBox.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUIWheelsBoxComboBox;
            }
        }
        
        public WpfListItem UIFlatListItem
        {
            get
            {
                if ((this.mUIFlatListItem == null))
                {
                    this.mUIFlatListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIFlatListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Flat";
                    this.mUIFlatListItem.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUIFlatListItem;
            }
        }
        
        public WpfComboBox UISaddleBoxComboBox
        {
            get
            {
                if ((this.mUISaddleBoxComboBox == null))
                {
                    this.mUISaddleBoxComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUISaddleBoxComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "saddleBox";
                    this.mUISaddleBoxComboBox.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUISaddleBoxComboBox;
            }
        }
        
        public WpfListItem UILargeListItem
        {
            get
            {
                if ((this.mUILargeListItem == null))
                {
                    this.mUILargeListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUILargeListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Large";
                    this.mUILargeListItem.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUILargeListItem;
            }
        }
        
        public WpfListItem UIPinkListItem
        {
            get
            {
                if ((this.mUIPinkListItem == null))
                {
                    this.mUIPinkListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIPinkListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Pink";
                    this.mUIPinkListItem.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUIPinkListItem;
            }
        }
        
        public WpfListItem UISRAMListItem
        {
            get
            {
                if ((this.mUISRAMListItem == null))
                {
                    this.mUISRAMListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUISRAMListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "SRAM";
                    this.mUISRAMListItem.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUISRAMListItem;
            }
        }
        
        public WpfComboBox UIGroupSetBrakesBoxComboBox
        {
            get
            {
                if ((this.mUIGroupSetBrakesBoxComboBox == null))
                {
                    this.mUIGroupSetBrakesBoxComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIGroupSetBrakesBoxComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "groupSetBrakesBox";
                    this.mUIGroupSetBrakesBoxComboBox.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUIGroupSetBrakesBoxComboBox;
            }
        }
        
        public WpfListItem UIRoadListItem
        {
            get
            {
                if ((this.mUIRoadListItem == null))
                {
                    this.mUIRoadListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIRoadListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Road";
                    this.mUIRoadListItem.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUIRoadListItem;
            }
        }
        
        public WpfListItem UIDropListItem
        {
            get
            {
                if ((this.mUIDropListItem == null))
                {
                    this.mUIDropListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIDropListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Drop";
                    this.mUIDropListItem.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUIDropListItem;
            }
        }
        
        public WpfEdit UINameBoxEdit
        {
            get
            {
                if ((this.mUINameBoxEdit == null))
                {
                    this.mUINameBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUINameBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "nameBox";
                    this.mUINameBoxEdit.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUINameBoxEdit;
            }
        }
        
        public WpfEdit UIAddressBoxEdit
        {
            get
            {
                if ((this.mUIAddressBoxEdit == null))
                {
                    this.mUIAddressBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIAddressBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "addressBox";
                    this.mUIAddressBoxEdit.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUIAddressBoxEdit;
            }
        }
        
        public WpfEdit UIEmailBoxEdit
        {
            get
            {
                if ((this.mUIEmailBoxEdit == null))
                {
                    this.mUIEmailBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIEmailBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "emailBox";
                    this.mUIEmailBoxEdit.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUIEmailBoxEdit;
            }
        }
        
        public WpfEdit UICardNoBoxEdit
        {
            get
            {
                if ((this.mUICardNoBoxEdit == null))
                {
                    this.mUICardNoBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUICardNoBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "cardNoBox";
                    this.mUICardNoBoxEdit.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUICardNoBoxEdit;
            }
        }
        
        public WpfEdit UICardNameBoxEdit
        {
            get
            {
                if ((this.mUICardNameBoxEdit == null))
                {
                    this.mUICardNameBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUICardNameBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "cardNameBox";
                    this.mUICardNameBoxEdit.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUICardNameBoxEdit;
            }
        }
        
        public WpfEdit UICvcBoxEdit
        {
            get
            {
                if ((this.mUICvcBoxEdit == null))
                {
                    this.mUICvcBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUICvcBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "cvcBox";
                    this.mUICvcBoxEdit.WindowTitles.Add("Build-A-Bike");
                    #endregion
                }
                return this.mUICvcBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUISmallListItem;
        
        private WpfListItem mUIRedListItem;
        
        private WpfListItem mUICentaurListItem;
        
        private WpfListItem mUICaliperListItem;
        
        private WpfComboBox mUIWheelsBoxComboBox;
        
        private WpfListItem mUIFlatListItem;
        
        private WpfComboBox mUISaddleBoxComboBox;
        
        private WpfListItem mUILargeListItem;
        
        private WpfListItem mUIPinkListItem;
        
        private WpfListItem mUISRAMListItem;
        
        private WpfComboBox mUIGroupSetBrakesBoxComboBox;
        
        private WpfListItem mUIRoadListItem;
        
        private WpfListItem mUIDropListItem;
        
        private WpfEdit mUINameBoxEdit;
        
        private WpfEdit mUIAddressBoxEdit;
        
        private WpfEdit mUIEmailBoxEdit;
        
        private WpfEdit mUICardNoBoxEdit;
        
        private WpfEdit mUICardNameBoxEdit;
        
        private WpfEdit mUICvcBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBankPromptWindow : WinWindow
    {
        
        public UIBankPromptWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Bank Prompt";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Bank Prompt");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Bank Prompt");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Bank Prompt");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
